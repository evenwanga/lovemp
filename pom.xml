<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    
    <groupId>com.lovemp</groupId>
    <artifactId>lovemp-ddd-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>lovemp-ddd-parent</name>
    <description>基于六边形架构的领域驱动设计项目</description>
    
    <modules>
        <module>lovemp-common</module>
        <module>lovemp-domain-person</module>
        <module>lovemp-domain-brand</module>
        <module>lovemp-domain-enterprise</module>
        <module>lovemp-domain-labor</module>
        <module>lovemp-domain-customer</module>
        <module>lovemp-starter</module>
    </modules>
    
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.settings.location>${user.home}/apache-maven-3.9.9/conf/settings.xml</maven.settings.location>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
        <!-- 主要依赖版本 -->
        <spring-cloud.version>2023.0.1</spring-cloud.version>
        <sa-token.version>1.37.0</sa-token.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok.version>1.18.30</lombok.version>
        <springdoc.version>2.5.0</springdoc.version>
        <resilience4j.version>2.2.0</resilience4j.version>
        <testcontainers.version>1.19.6</testcontainers.version>
        <junit-jupiter.version>5.10.2</junit-jupiter.version>
        
        <!-- 内部模块版本 -->
        <lovemp.version>0.0.1-SNAPSHOT</lovemp.version>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud 依赖管理 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- Sa-Token 依赖 -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot3-starter</artifactId>
                <version>${sa-token.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-redis-jackson</artifactId>
                <version>${sa-token.version}</version>
            </dependency>
            
            <!-- MapStruct 对象映射 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            
            <!-- SpringDoc OpenAPI -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            
            <!-- Resilience4j 熔断和限流 -->
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-spring-boot3</artifactId>
                <version>${resilience4j.version}</version>
            </dependency>
            
            <!-- 测试容器 -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- 内部模块依赖 -->
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-common</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-domain-person</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-domain-brand</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-domain-enterprise</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-domain-labor</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-domain-customer</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-domain-auth</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lovemp</groupId>
                <artifactId>lovemp-application</artifactId>
                <version>${lovemp.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        <!-- 所有模块共享的依赖 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                
                <!-- JaCoCo插件配置 -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.11</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.80</minimum>
                                            </limit>
                                            <limit>
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>0.70</minimum>
                                            </limit>
                                        </limits>
                                    </rule>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <!-- 全局启用JaCoCo插件 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project> 